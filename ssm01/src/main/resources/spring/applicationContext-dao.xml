<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd ">

	<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置数据源 ，dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="30" />
		<property name="maxIdle" value="5" />
	</bean>

				<!-- spring 整合 mybatis   mybatis-spring.jar 整合包中 -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />  <!-- 数据库连接池 -->

        <!-- 加载mybatis的全局配置文件 -->
		<!-- 加载mybatis的配置文件的属性  你手动加载mybatis全局配置文件的使用类似 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.yhh.mybatis.entity" />
        <!-- 扫描sql配置文件:mapper需要的xml文件 这个可以不用，因为遵循 Mapper.java和Mapper.xml规范 -->
        <!--<property name="mapperLocations" value="classpath:com/yhh/mybatis/mapper/*Mapper.xml" />-->

	</bean>
	
			<!-- mapper扫描器 mybatis-spring.jar 整合包中 -->
			
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
        <property name="basePackage" value="com.yhh.mybatis.mapper"/>
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
	</bean>




</beans>